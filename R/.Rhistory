library(tidyverse)
# Load data
metadata <- read_delim("IBD_halfvarson_metadata.tsv", delim="\t")
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
setwd("/Users/sidahuja/Documents/1_UBC/Y5/Y5T1/MICB475/MICB475_24W1_Team_2/R")
library(tidyverse)
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "collection_timestamp", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease", "timepoint")
View(metadata)
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" | ibd_subtype != "CC")
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "collection_timestamp", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC") %>%
filter(ibd_subtype != "CC")
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "collection_timestamp", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" | ibd_subtype != "CC")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2)
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(all(c(1, 2) %in% timepoint)) %>%
ungroup()
View(metadata)
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "collection_timestamp", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2)
metadata <- metadata %>%
filter(timepoint %in% c(1, 2))
# Check counts of patients
count_HC <- patients_with_timepoint_1_2 %>%
filter(diagnosis_full == "HC") %>%
nrow()/2
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patient_id) %>%
filter(n_distinct(timepoint) == 2) %>%
ungroup()
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n_distinct(timepoint) == 2) %>%
ungroup()
View(metadata)
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n_distinct(timepoint) == 2) %>%
ungroup()
unusual_patient_ids <- metadata %>%
group_by(patientnumber) %>%
summarise(count = n()) %>%
filter(count != 2) %>%
ungroup()
View(unusual_patient_ids)
View(metadata)
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n() == 2) %>%
ungroup()
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "collection_timestamp", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n() == 2) %>%
ungroup()
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2
count_IBD_r <- metadata %>%
filter(ibd_subtype == "ICD_r") %>%
nrow()/2
count_surgery <- metadata %>%
filter(cd_resection == "yes") %>%
nrow()/2
# Filtering for resection only
metadata_surg <- metadata %>%
filter(cd_resection == "yes")
# Filtering for resection only
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes")
View(metadata_no_surg)
View(metadata_surg)
View(metadata_no_surg)
# Filtering for no resection IBD patients
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes" & diagnosis_full != "HC")
# Filtering for healthy controls
metadata_surg <- metadata %>%
filter(diagnosis_full == "HC")
# Filtering for healthy controls
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC")
# Filtering for resection only
metadata_surg <- metadata %>%
filter(cd_resection == "yes")
# Filtering for no resection IBD patients
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes" & diagnosis_full != "HC")
View(metadata_healthy)
# Filtering for healthy controls and only keeping timepoint 1
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC" & timepoint ==1)
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "collection_timestamp", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease", "timepoint")
View(metadata)
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "diagnosis_full",
"ibd_subtype", "patientnumber", "perianal_disease",
"timepoint")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "diagnosis_full",
"ibd_subtype", "patientnumber", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n() == 2) %>%
ungroup()
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2 # 9
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2 # 48
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2 # 38
count_surgery <- metadata %>%
filter(cd_resection == "yes") %>%
nrow()/2 # 17
# Filtering for resection only
metadata_surg <- metadata %>%
filter(cd_resection == "yes")
# Filtering for healthy controls and only keeping timepoint 1
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC" & timepoint ==1)
# Filtering for no resection IBD patients
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes" & diagnosis_full != "HC")
set.seed(123) # Setting seed for reproducibilty
set.seed(123) # Setting seed for reproducibility
View(metadata_no_surg)
# Filtering for healthy controls and only keeping timepoint 1
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC" & timepoint == 1)
# Filtering for no resection IBD patients
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes" & diagnosis_full != "HC")
set.seed(123) # Setting seed for reproducibility
metadata_no_surg <- metadata_no_surg %>%
filter(timepoint == 1) %>%
group_by(ibd_subtype) %>%
slice_sample(n = 6)
View(metadata_surg)
View(metadata_no_surg)
# Filtering for resection only and adding treatment column
metadata_surg <- metadata %>%
filter(cd_resection == "yes") %>%
mutate(treatment = case_when(timepoint == 1 ~ "IBD_surg_short",
timepoint == 2 ~ "IBD_surg_long"))
View(metadata_surg)
# Filtering for healthy controls and only keeping timepoint 1 and adding
# treatment column
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC" & timepoint == 1)  %>%
mutate(treatment = "HC")
metadata_no_surg <- metadata_no_surg %>%
filter(timepoint == 1) %>%
group_by(ibd_subtype) %>%
slice_sample(n = 6) %>%
mutate(treatment = "IBD_no_surg")
# Combining dataframes
metadata_final <- full_join(metadata_surg, metadata_no_surg, metadata_healthy, by = 'sample-id')
View(metadata_final)
# Combining dataframes
metadata_final <- full_join(metadata_surg, metadata_no_surg, metadata_healthy)
# Combining dataframes
metadata_final <- bind_rows(metadata_surg, metadata_no_surg, metadata_healthy)
View(metadata_final)
# Adding short diagnosis description
metadata_final <- metadata_final %>%
mutate(diagnosis = case_when(diagnosis_full %in% c("UC", "CD") ~ "IBD",
diagnosis_full == "HC" ~ "HC"))
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "diagnosis_full",
"ibd_subtype", "patientnumber", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) #%>%
View(metadata)
count_surgery <- metadata %>%
filter(cd_resection == "yes") %>%
nrow()/2 # 17
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "diagnosis_full",
"ibd_subtype", "patientnumber", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n() == 2) %>%
ungroup()
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2 # 9
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2 # 48
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2 # 38
count_surgery <- metadata %>%
filter(cd_resection == "yes") %>%
nrow()/2 # 17
# Filtering for resection only and adding treatment column
metadata_surg <- metadata %>%
filter(cd_resection == "yes") %>%
mutate(treatment = case_when(timepoint == 1 ~ "IBD_surg_short",
timepoint == 2 ~ "IBD_surg_long"))
# Filtering for healthy controls and only keeping timepoint 1 and adding
# treatment column
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC" & timepoint == 1)  %>%
mutate(treatment = "HC")
# Filtering for no resection IBD patients
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes" & diagnosis_full != "HC")
set.seed(123) # Setting seed for reproducibility
metadata_no_surg <- metadata_no_surg %>%
filter(timepoint == 1) %>%
group_by(ibd_subtype) %>%
slice_sample(n = 6) %>%
mutate(treatment = "IBD_no_surg")
metadata_no_surg <- metadata_no_surg %>%
filter(timepoint == 1) %>%
group_by(ibd_subtype) %>%
slice_sample(n = 6) %>%
mutate(treatment = "IBD_no_surg")
# Combining dataframes
metadata_final <- bind_rows(metadata_surg, metadata_no_surg, metadata_healthy)
# Adding short diagnosis description
metadata_final <- metadata_final %>%
mutate(diagnosis = case_when(diagnosis_full %in% c("UC", "CD") ~ "IBD",
diagnosis_full == "HC" ~ "HC"))
metadata_final$ibd_subtype <- gsub("_(r|nr)$", "", metadata_final$ibd_subtype)
View(metadata_final)
# Load data
metadata <- read_delim("data/IBD_halfvarson_metadata.tsv", delim="\t")
# Select columns of interest
metadata <- select(metadata, "sample-id", "cd_resection", "diagnosis_full",
"ibd_subtype", "patientnumber", "timepoint")
# Filter out LC and CC ibd subtypes
metadata <- metadata %>%
filter(ibd_subtype != "LC" & ibd_subtype != "CC")
# Obtain timepoints of interest (1 and 2) and only keep patient ids with
# both timepoint 1 and 2
metadata <- metadata %>%
filter(timepoint %in% c(1, 2)) %>%
group_by(patientnumber) %>%
filter(n() == 2) %>%
ungroup()
# Check counts of patients
count_HC <- metadata %>%
filter(diagnosis_full == "HC") %>%
nrow()/2 # 9
count_UC <- metadata %>%
filter(diagnosis_full == "UC") %>%
nrow()/2 # 48
count_CD <- metadata %>%
filter(diagnosis_full == "CD") %>%
nrow()/2 # 38
count_surgery <- metadata %>%
filter(cd_resection == "yes") %>%
nrow()/2 # 17
# Filtering for resection only and adding treatment type column
metadata_surg <- metadata %>%
filter(cd_resection == "yes") %>%
mutate(treatment_type = case_when(timepoint == 1 ~ "IBD_surg_short",
timepoint == 2 ~ "IBD_surg_long"))
# Filtering for healthy controls and only keeping timepoint 1 and adding
# treatment type column
metadata_healthy <- metadata %>%
filter(diagnosis_full == "HC" & timepoint == 1)  %>%
mutate(treatment_type = "HC")
# Filtering for no resection IBD patients
metadata_no_surg <- metadata %>%
filter(cd_resection != "yes" & diagnosis_full != "HC")
set.seed(123) # Setting seed for reproducibility
metadata_no_surg <- metadata_no_surg %>%
filter(timepoint == 1) %>%
group_by(ibd_subtype) %>%
slice_sample(n = 6) %>%
mutate(treatment_type = "IBD_no_surg")
# Combining dataframes
metadata_final <- bind_rows(metadata_surg, metadata_no_surg, metadata_healthy)
# Adding short diagnosis description and removing resection classification
# from IBD subtype
metadata_final <- metadata_final %>%
mutate(diagnosis = case_when(diagnosis_full %in% c("UC", "CD") ~ "IBD",
diagnosis_full == "HC" ~ "HC"))
metadata_final$ibd_subtype <- gsub("_(r|nr)$", "", metadata_final$ibd_subtype)
# Select necessary columns
metadata_final <- metadata_final %>%
select("sample-id", "ibd_subtype", "diagnosis", "treatment_type")
# Save metadata as a .tsv file
write.table(metadata_final, file="IBD_halfvarson_metadata_filtered.tsv", sep="\t", quote = T, row.names = F, col.names = T)
# Save metadata as a .tsv file
write.table(metadata_final, file="data/IBD_halfvarson_metadata_filtered.tsv", sep="\t", quote = T, row.names = F, col.names = T)
